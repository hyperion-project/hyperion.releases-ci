name: RPM Packages build for DNF Repository

on:
  workflow_call:
    inputs:
      repo_checkout:
        type: string
        description: The GitHub Repository to checkout
        default: hyperion-project
        required: false
      head_sha:
        type: string
        description: The branch, tag or SHA to checkout
        default: master
        required: false
      nightly:
        type: boolean
        description: Nightly build
        default: false
        required: false
      upload:
        type: boolean
        description: Upload Artifacts
        default: false
        required: false

env:
  repository: ${{ inputs.repo_checkout }}
  ghcr: hyperion-project

jobs:
  build:
    name: üêß ${{ matrix.os.distribution }} ${{ matrix.os.version }} (${{ matrix.architecture[0] }})
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        os: [
          { distribution: Fedora, version: 39 },
          { distribution: Fedora, version: 40 },
          { distribution: Fedora, version: 41 }
        ]
        architecture: [
          [ amd64, linux/amd64 ]
        ]

    steps:
      - name: ‚¨á Checkout hyperion.ng
        uses: actions/checkout@v4
        with:
          repository: ${{ env.repository }}/hyperion.ng
          ref: ${{ inputs.head_sha || 'master' }}
          submodules: recursive

      - name: ‚¨á Checkout hyperion.releases-ci
        uses: actions/checkout@v4
        with:
          path: releases-ci

      - name: üîß Prepare
        run: |
          echo '::group::Checking the version number'
            if [[ "${{ inputs.nightly }}" = true ]]; then
              echo "$(tr -d '\n' < .version)+nightly$(date '+%Y%m%d')${{ inputs.head_sha }}" > .version
            else
              tr -d '\n' < .version > temp && mv temp .version
            fi
          echo '::endgroup::'

          echo '::group::Copy rpmbuild folder'
            cp -r releases-ci/rpmbuild ${GITHUB_WORKSPACE}/
          echo '::endgroup::'

      - name: üë∑ Build
        shell: bash
        run: |
          echo '::group::Building Hyperion'
            VERSION=$(cat .version)
            mkdir -p "${GITHUB_WORKSPACE}/deploy"
            docker run --rm --platform=${{ matrix.architecture[1] }} \
              -w "/root" \
              -v "${GITHUB_WORKSPACE}/deploy:/deploy" \
              -v "${GITHUB_WORKSPACE}:/root/hyperion.ng:rw" \
              ghcr.io/${{ env.ghcr }}/$(echo '${{ matrix.os.distribution }}' | tr '[:upper:]' '[:lower:]'):${{ matrix.os.version }}-qt6 \
              /bin/bash -c "tar -czf rpmbuild/SOURCES/hyperion.ng.tar.gz hyperion.ng/ && \
              cp -f hyperion.ng/rpmbuild/hyperion.spec.in rpmbuild/SPECS/hyperion.spec && \
              rpmdev-bumpspec --comment='${{ env.COMMIT_MESSAGE }}' --userstring='${{ env.ACTOR }}' rpmbuild/SPECS/hyperion.spec && \
              rpmbuild -ba --define '_version $(echo ${VERSION} | sed s/-/~/g | sed s/+/^/g)' rpmbuild/SPECS/hyperion.spec --clean && \
              cp -fv rpmbuild/RPMS/$(uname -m)/hyperion* /deploy"
          echo '::endgroup::'
        env:
          ACTOR: "Hyperion Project <admin@hyperion-project.org>"
          COMMIT_MESSAGE: ${{ github.event.commits[0].message }}

      - name: üì¶ Upload
        if: ${{ inputs.upload }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ format('artifact-{0}_{1}_{2}_qt6', matrix.os.distribution, matrix.os.version, matrix.architecture[0] )}}
          path: deploy
          retention-days: 1
          
