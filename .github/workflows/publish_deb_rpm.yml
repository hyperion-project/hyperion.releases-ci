name: Publish DEB/RPM packages to APT/DNF Repository

on:
  workflow_call:
    inputs:
      nightly:
        type: boolean
        description: Nightly build
        default: false
        required: false
      head_sha:
        type: string
        description: The branch, tag or SHA to checkout
        default: master
        required: false
      publish:
        type: boolean
        description: Publish packages
        default: false
        required: false

jobs:
  publish:
    name: ${{ inputs.publish && 'ðŸš€ Publish repository' || 'ðŸ“¦ Assemble repository' }}
    runs-on: ubuntu-latest
    container:
      image: fedora
    steps:
      - name: ðŸ”§ Install Dependencies
        shell: bash
        run: dnf install git gnupg2 zstd reprepro createrepo rpm-sign -y

      - name: â¬‡ Checkout
        uses: actions/checkout@v4

      - name: ðŸ’¾ Artifact download
        uses: actions/download-artifact@v4

      - name: ðŸ”§ Prepare DEB/RPM Upload
        shell: bash
        run: |
          echo '::group::[APT] Create initial structure and include artifacts into package source'
            DEB_PACKAGES=$(find "." -name "artifact-*.deb" -type f 2>/dev/null)
            DEB_PACKAGE_NUM=$(echo "$DEB_PACKAGES" | wc -w)
            if [[ $DEB_PACKAGE_NUM -gt 0 ]]; then
              mkdir -p deb/{conf,dists,db}
              if [[ "${{ inputs.nightly }}" = true ]]; then
                touch "deb/${{ inputs.head_sha }}"
              fi
              cp debian/distributions deb/conf/distributions
              reprepro -Vb deb createsymlinks
              reprepro -Vb deb export
              for file in $DEB_PACKAGES; do
                if [ -f "$file" ]; then
                  dist=${file#*~}
                  dist=${dist%_*}
                  reprepro -Vb deb/ includedeb "$dist" "$file"
                fi
              done
              cp .github/workflows/redirect.html deb/index.html
            fi
          echo '::endgroup::'

      - name: ðŸ§¹ Cleanup
        uses: geekyeggo/delete-artifact@v5
        with:
          name: artifact-*
          failOnError: false
